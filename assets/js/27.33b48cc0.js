(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{439:function(t,e,a){"use strict";a.r(e);var s=a(24),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"打包提交pip模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包提交pip模块"}},[t._v("#")]),t._v(" 打包提交pip模块")]),t._v(" "),a("h2",{attrs:{id:"准备工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),a("h4",{attrs:{id:"创建目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建目录结构"}},[t._v("#")]),t._v(" 创建目录结构")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("./pushgateway_client/\n├── LICENSE\n├── README.md\n├── pyproject.toml\n├── setup.cfg\n├── src/\n│   └── pushgateway_client/\n│       ├── __init__.py\n│       └── client.py\n└── tests/\n")])])]),a("ul",[a("li",[a("code",[t._v("tests/")]),t._v("是测试文件的占位符，暂时将其留空。")])]),t._v(" "),a("h4",{attrs:{id:"创建pyproject-toml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建pyproject-toml"}},[t._v("#")]),t._v(" 创建pyproject.toml")]),t._v(" "),a("p",[a("code",[t._v("pyproject.toml")]),t._v("告诉构建工具（如pip和build）构建项目需要什么。本模块使用setuptools，所以打开pyproject.toml输入如下内容：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[build-system]\nrequires = [\n    "setuptools>=42",\n    "wheel>=0.36.2",\n    "requests>=2.26.0"\n]\nbuild-backend = "setuptools.build_meta"\n')])])]),a("ul",[a("li",[a("code",[t._v("build-system.requires")]),t._v("给出构建包所需的包列表。在此处列出某些内容只会使其在构建期间可用，而不是在安装后可用。")]),t._v(" "),a("li",[a("code",[t._v("build-system.build-backend")]),t._v("是将用于执行构建的 Python 对象的名称。")])]),t._v(" "),a("h4",{attrs:{id:"创建setup-cfg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建setup-cfg"}},[t._v("#")]),t._v(" 创建setup.cfg")]),t._v(" "),a("p",[a("code",[t._v("setup.cfg")]),t._v("是setuptools的配置文件。它告诉 setuptools 关于您的包（例如名称和版本）以及要包含哪些代码文件。")]),t._v(" "),a("p",[t._v("打开setup.cfg并输入以下内容。更改name 以包含您的用户名；这可确保您拥有唯一的包名称，并且您的包不会与其他人按照本教程上传的包发生冲突。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[metadata]\nname = pushgateway_client\nversion = 0.0.9\nauthor = Tay\nauthor_email = tay3223@qq.com\ndescription = Python专用的pushgateway客户端，可以向Pushgateway中推送指标数据，支持多标签设定\nlong_description = file: README.md\nlong_description_content_type = text/markdown\nurl = https://blog.taycc.com/pages/opensource/pushgateway_client.html\nproject_urls =\n    使用文档 = https://blog.taycc.com/pages/opensource/pushgateway_client.html\nclassifiers =\n    Programming Language :: Python :: 3\n    License :: OSI Approved :: MIT License\n    Operating System :: OS Independent\n\n[options]\npackage_dir =\n    = src\npackages = find:\npython_requires = >=3.6\n\n[options.packages.find]\nwhere = src\n")])])]),a("h4",{attrs:{id:"创建readme-md"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建readme-md"}},[t._v("#")]),t._v(" 创建README.md")]),t._v(" "),a("p",[t._v("创建README.md文件以便在PyPi的模块主页中进行项目说明")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# Example Package\n\nThis is a simple example package. You can use\n[Github-flavored Markdown](https://guides.github.com/features/mastering-markdown/)\nto write your content.\n")])])]),a("h4",{attrs:{id:"创建license-许可证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建license-许可证"}},[t._v("#")]),t._v(" 创建LICENSE（许可证）")]),t._v(" "),a("p",[t._v("上传到 Python Package Index 的每个包都包含许可证很重要。这会告诉安装您的软件包的用户他们可以使用您的软件包的条款。如需帮助选择许可证，请参阅 https://choosealicense.com/。选择许可证后，打开 LICENSE并输入许可证文本。例如，如果您选择了 MIT 许可证：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('Copyright (c) 2018 The Python Packaging Authority\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n')])])]),a("h2",{attrs:{id:"编写代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写代码"}},[t._v("#")]),t._v(" 编写代码")]),t._v(" "),a("blockquote",[a("p",[t._v("准备工作完成后，您就可以开发自己的代码了，本地测试OK之后，就可以发布到pip官方源仓库中。"),a("br"),t._v("\n~"),a("br"),t._v("\n~"),a("br"),t._v("\n~"),a("br"),t._v("\n开发过程，略...")])]),t._v(" "),a("h2",{attrs:{id:"打包上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包上传"}},[t._v("#")]),t._v(" 打包上传")]),t._v(" "),a("ul",[a("li",[t._v("第一步：注册一个PyPi官方账号："),a("a",{attrs:{href:"https://pypi.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://pypi.org/"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("第一步：使用自己的账号申请一个"),a("code",[t._v("API Token")]),t._v("："),a("a",{attrs:{href:"https://pypi.org/manage/account/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://pypi.org/manage/account/"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("第三步：在本机创建"),a("code",[t._v("~/.pypirc")]),t._v("文件，然后为该文件中写入以下内容：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[pypi]\n  username = __token__                      # 这个大家填写的都是一样的，都是填写__token__\n  password = pypi-AgEIcHlwaS5vcmcCJDF...    # 这是作者自己的token，后面这里我就省略掉了，大家替换上自己的token即可\n")])])]),a("ul",[a("li",[t._v("第四步：当"),a("code",[t._v("开发完自己的代码")]),t._v("且"),a("code",[t._v("创建好~/.pypirc文件")]),t._v("后，接着就需要在"),a("code",[t._v("pyproject.toml文件")]),t._v("的同级目录中执行如下命令")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("pip install --upgrade pip\npip install --upgrade build twine\npython3 -m build\ntwine upload dist/*\n")])])]),a("p",[t._v("到此为止Python模块打包上传就算完成了，大家可以去自己账号上查看pypi包。")]),t._v(" "),a("h2",{attrs:{id:"访问自己的模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问自己的模块"}},[t._v("#")]),t._v(" 访问自己的模块")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pushgateway-client\n")])])]),a("p",[t._v("如果国内下载较慢可以临时加速一下")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pypi官网（原版拉取）")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pushgateway-client --upgrade -i https://pypi.org/project   \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 阿里云源（加速拉取）")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pushgateway-client --upgrade -i http://mirrors.aliyun.com/pypi/simple\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 清华大学源（加速拉取）    ")]),t._v("\npip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pushgateway-client --upgrade -i https://pypi.tuna.tsinghua.edu.cn/simple\n")])])]),a("p",[a("br"),a("br"),a("br"),t._v(" "),a("code",[t._v("（全文到此结束）")])])])}),[],!1,null,null,null);e.default=n.exports}}]);